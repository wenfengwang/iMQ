// Code generated by protoc-gen-go. DO NOT EDIT.
// source: baton.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Action int32

const (
	Action_PUB Action = 0
	Action_SUB Action = 1
)

var Action_name = map[int32]string{
	0: "PUB",
	1: "SUB",
}

var Action_value = map[string]int32{
	"PUB": 0,
	"SUB": 1,
}

func (x Action) String() string {
	return proto.EnumName(Action_name, int32(x))
}

func (Action) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8087ccb7ab16ead4, []int{0}
}

type Permission int32

const (
	Permission_READ       Permission = 0
	Permission_WRITE      Permission = 1
	Permission_READ_WRITE Permission = 2
	Permission_DENIED     Permission = 3
)

var Permission_name = map[int32]string{
	0: "READ",
	1: "WRITE",
	2: "READ_WRITE",
	3: "DENIED",
}

var Permission_value = map[string]int32{
	"READ":       0,
	"WRITE":      1,
	"READ_WRITE": 2,
	"DENIED":     3,
}

func (x Permission) String() string {
	return proto.EnumName(Permission_name, int32(x))
}

func (Permission) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8087ccb7ab16ead4, []int{1}
}

type Code int32

const (
	Code_SUCCESS                    Code = 0
	Code_FAILED                     Code = 1
	Code_TOPIC_MISSING              Code = 2
	Code_SUBSCRIPTION_MISSING       Code = 3
	Code_TOPIC_ALREADY_EXIST        Code = 4
	Code_SUBSCRIPTION_ALREADY_EXIST Code = 5
)

var Code_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILED",
	2: "TOPIC_MISSING",
	3: "SUBSCRIPTION_MISSING",
	4: "TOPIC_ALREADY_EXIST",
	5: "SUBSCRIPTION_ALREADY_EXIST",
}

var Code_value = map[string]int32{
	"SUCCESS":                    0,
	"FAILED":                     1,
	"TOPIC_MISSING":              2,
	"SUBSCRIPTION_MISSING":       3,
	"TOPIC_ALREADY_EXIST":        4,
	"SUBSCRIPTION_ALREADY_EXIST": 5,
}

func (x Code) String() string {
	return proto.EnumName(Code_name, int32(x))
}

func (Code) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8087ccb7ab16ead4, []int{2}
}

type CreateTopicRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	QueueNumbers         int32    `protobuf:"varint,2,opt,name=queueNumbers,proto3" json:"queueNumbers,omitempty"`
	AutoScaling          bool     `protobuf:"varint,3,opt,name=autoScaling,proto3" json:"autoScaling,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTopicRequest) Reset()         { *m = CreateTopicRequest{} }
func (m *CreateTopicRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTopicRequest) ProtoMessage()    {}
func (*CreateTopicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8087ccb7ab16ead4, []int{0}
}

func (m *CreateTopicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTopicRequest.Unmarshal(m, b)
}
func (m *CreateTopicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTopicRequest.Marshal(b, m, deterministic)
}
func (m *CreateTopicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTopicRequest.Merge(m, src)
}
func (m *CreateTopicRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTopicRequest.Size(m)
}
func (m *CreateTopicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTopicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTopicRequest proto.InternalMessageInfo

func (m *CreateTopicRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateTopicRequest) GetQueueNumbers() int32 {
	if m != nil {
		return m.QueueNumbers
	}
	return 0
}

func (m *CreateTopicRequest) GetAutoScaling() bool {
	if m != nil {
		return m.AutoScaling
	}
	return false
}

type DeleteTopicRequest struct {
	TopicName            string   `protobuf:"bytes,1,opt,name=topicName,proto3" json:"topicName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTopicRequest) Reset()         { *m = DeleteTopicRequest{} }
func (m *DeleteTopicRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTopicRequest) ProtoMessage()    {}
func (*DeleteTopicRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8087ccb7ab16ead4, []int{1}
}

func (m *DeleteTopicRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTopicRequest.Unmarshal(m, b)
}
func (m *DeleteTopicRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTopicRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTopicRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTopicRequest.Merge(m, src)
}
func (m *DeleteTopicRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTopicRequest.Size(m)
}
func (m *DeleteTopicRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTopicRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTopicRequest proto.InternalMessageInfo

func (m *DeleteTopicRequest) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

type CreateSubscriptionRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TopicName            string   `protobuf:"bytes,2,opt,name=topicName,proto3" json:"topicName,omitempty"`
	AutoScaling          bool     `protobuf:"varint,3,opt,name=autoScaling,proto3" json:"autoScaling,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSubscriptionRequest) Reset()         { *m = CreateSubscriptionRequest{} }
func (m *CreateSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSubscriptionRequest) ProtoMessage()    {}
func (*CreateSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8087ccb7ab16ead4, []int{2}
}

func (m *CreateSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSubscriptionRequest.Unmarshal(m, b)
}
func (m *CreateSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *CreateSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSubscriptionRequest.Merge(m, src)
}
func (m *CreateSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSubscriptionRequest.Size(m)
}
func (m *CreateSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSubscriptionRequest proto.InternalMessageInfo

func (m *CreateSubscriptionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateSubscriptionRequest) GetTopicName() string {
	if m != nil {
		return m.TopicName
	}
	return ""
}

func (m *CreateSubscriptionRequest) GetAutoScaling() bool {
	if m != nil {
		return m.AutoScaling
	}
	return false
}

type DeleteSubscriptionRequest struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSubscriptionRequest) Reset()         { *m = DeleteSubscriptionRequest{} }
func (m *DeleteSubscriptionRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteSubscriptionRequest) ProtoMessage()    {}
func (*DeleteSubscriptionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8087ccb7ab16ead4, []int{3}
}

func (m *DeleteSubscriptionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSubscriptionRequest.Unmarshal(m, b)
}
func (m *DeleteSubscriptionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSubscriptionRequest.Marshal(b, m, deterministic)
}
func (m *DeleteSubscriptionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSubscriptionRequest.Merge(m, src)
}
func (m *DeleteSubscriptionRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteSubscriptionRequest.Size(m)
}
func (m *DeleteSubscriptionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSubscriptionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSubscriptionRequest proto.InternalMessageInfo

func (m *DeleteSubscriptionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type RegisterBrokerRequest struct {
	Addr                 string   `protobuf:"bytes,1,opt,name=addr,proto3" json:"addr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterBrokerRequest) Reset()         { *m = RegisterBrokerRequest{} }
func (m *RegisterBrokerRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterBrokerRequest) ProtoMessage()    {}
func (*RegisterBrokerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8087ccb7ab16ead4, []int{4}
}

func (m *RegisterBrokerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterBrokerRequest.Unmarshal(m, b)
}
func (m *RegisterBrokerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterBrokerRequest.Marshal(b, m, deterministic)
}
func (m *RegisterBrokerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterBrokerRequest.Merge(m, src)
}
func (m *RegisterBrokerRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterBrokerRequest.Size(m)
}
func (m *RegisterBrokerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterBrokerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterBrokerRequest proto.InternalMessageInfo

func (m *RegisterBrokerRequest) GetAddr() string {
	if m != nil {
		return m.Addr
	}
	return ""
}

type BrokerHBRequest struct {
	BrokerId             uint64   `protobuf:"varint,3,opt,name=brokerId,proto3" json:"brokerId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrokerHBRequest) Reset()         { *m = BrokerHBRequest{} }
func (m *BrokerHBRequest) String() string { return proto.CompactTextString(m) }
func (*BrokerHBRequest) ProtoMessage()    {}
func (*BrokerHBRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8087ccb7ab16ead4, []int{5}
}

func (m *BrokerHBRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrokerHBRequest.Unmarshal(m, b)
}
func (m *BrokerHBRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrokerHBRequest.Marshal(b, m, deterministic)
}
func (m *BrokerHBRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrokerHBRequest.Merge(m, src)
}
func (m *BrokerHBRequest) XXX_Size() int {
	return xxx_messageInfo_BrokerHBRequest.Size(m)
}
func (m *BrokerHBRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BrokerHBRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BrokerHBRequest proto.InternalMessageInfo

func (m *BrokerHBRequest) GetBrokerId() uint64 {
	if m != nil {
		return m.BrokerId
	}
	return 0
}

type BrokerHBResponse struct {
	Queues               []uint64 `protobuf:"varint,1,rep,packed,name=queues,proto3" json:"queues,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrokerHBResponse) Reset()         { *m = BrokerHBResponse{} }
func (m *BrokerHBResponse) String() string { return proto.CompactTextString(m) }
func (*BrokerHBResponse) ProtoMessage()    {}
func (*BrokerHBResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8087ccb7ab16ead4, []int{6}
}

func (m *BrokerHBResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrokerHBResponse.Unmarshal(m, b)
}
func (m *BrokerHBResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrokerHBResponse.Marshal(b, m, deterministic)
}
func (m *BrokerHBResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrokerHBResponse.Merge(m, src)
}
func (m *BrokerHBResponse) XXX_Size() int {
	return xxx_messageInfo_BrokerHBResponse.Size(m)
}
func (m *BrokerHBResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BrokerHBResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BrokerHBResponse proto.InternalMessageInfo

func (m *BrokerHBResponse) GetQueues() []uint64 {
	if m != nil {
		return m.Queues
	}
	return nil
}

type UpdateRouteRequest struct {
	// consumerId or producerId
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Action               Action   `protobuf:"varint,3,opt,name=action,proto3,enum=pb.Action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRouteRequest) Reset()         { *m = UpdateRouteRequest{} }
func (m *UpdateRouteRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRouteRequest) ProtoMessage()    {}
func (*UpdateRouteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8087ccb7ab16ead4, []int{7}
}

func (m *UpdateRouteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRouteRequest.Unmarshal(m, b)
}
func (m *UpdateRouteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRouteRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRouteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRouteRequest.Merge(m, src)
}
func (m *UpdateRouteRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRouteRequest.Size(m)
}
func (m *UpdateRouteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRouteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRouteRequest proto.InternalMessageInfo

func (m *UpdateRouteRequest) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateRouteRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateRouteRequest) GetAction() Action {
	if m != nil {
		return m.Action
	}
	return Action_PUB
}

type UpdateRouteResponse struct {
	// consumerId or producerId
	Id                   uint64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Leases               []*Lease `protobuf:"bytes,2,rep,name=leases,proto3" json:"leases,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRouteResponse) Reset()         { *m = UpdateRouteResponse{} }
func (m *UpdateRouteResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateRouteResponse) ProtoMessage()    {}
func (*UpdateRouteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8087ccb7ab16ead4, []int{8}
}

func (m *UpdateRouteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRouteResponse.Unmarshal(m, b)
}
func (m *UpdateRouteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRouteResponse.Marshal(b, m, deterministic)
}
func (m *UpdateRouteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRouteResponse.Merge(m, src)
}
func (m *UpdateRouteResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateRouteResponse.Size(m)
}
func (m *UpdateRouteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRouteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRouteResponse proto.InternalMessageInfo

func (m *UpdateRouteResponse) GetId() uint64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateRouteResponse) GetLeases() []*Lease {
	if m != nil {
		return m.Leases
	}
	return nil
}

type Lease struct {
	BrokerId             uint64     `protobuf:"varint,1,opt,name=brokerId,proto3" json:"brokerId,omitempty"`
	BrokerAddr           string     `protobuf:"bytes,2,opt,name=brokerAddr,proto3" json:"brokerAddr,omitempty"`
	ExpiredTime          uint64     `protobuf:"varint,3,opt,name=expiredTime,proto3" json:"expiredTime,omitempty"`
	Perm                 Permission `protobuf:"varint,4,opt,name=perm,proto3,enum=pb.Permission" json:"perm,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Lease) Reset()         { *m = Lease{} }
func (m *Lease) String() string { return proto.CompactTextString(m) }
func (*Lease) ProtoMessage()    {}
func (*Lease) Descriptor() ([]byte, []int) {
	return fileDescriptor_8087ccb7ab16ead4, []int{9}
}

func (m *Lease) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lease.Unmarshal(m, b)
}
func (m *Lease) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lease.Marshal(b, m, deterministic)
}
func (m *Lease) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lease.Merge(m, src)
}
func (m *Lease) XXX_Size() int {
	return xxx_messageInfo_Lease.Size(m)
}
func (m *Lease) XXX_DiscardUnknown() {
	xxx_messageInfo_Lease.DiscardUnknown(m)
}

var xxx_messageInfo_Lease proto.InternalMessageInfo

func (m *Lease) GetBrokerId() uint64 {
	if m != nil {
		return m.BrokerId
	}
	return 0
}

func (m *Lease) GetBrokerAddr() string {
	if m != nil {
		return m.BrokerAddr
	}
	return ""
}

func (m *Lease) GetExpiredTime() uint64 {
	if m != nil {
		return m.ExpiredTime
	}
	return 0
}

func (m *Lease) GetPerm() Permission {
	if m != nil {
		return m.Perm
	}
	return Permission_READ
}

type Response struct {
	ResponseCode         Code     `protobuf:"varint,1,opt,name=responseCode,proto3,enum=pb.Code" json:"responseCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_8087ccb7ab16ead4, []int{10}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetResponseCode() Code {
	if m != nil {
		return m.ResponseCode
	}
	return Code_SUCCESS
}

func init() {
	proto.RegisterEnum("pb.Action", Action_name, Action_value)
	proto.RegisterEnum("pb.Permission", Permission_name, Permission_value)
	proto.RegisterEnum("pb.Code", Code_name, Code_value)
	proto.RegisterType((*CreateTopicRequest)(nil), "pb.CreateTopicRequest")
	proto.RegisterType((*DeleteTopicRequest)(nil), "pb.DeleteTopicRequest")
	proto.RegisterType((*CreateSubscriptionRequest)(nil), "pb.CreateSubscriptionRequest")
	proto.RegisterType((*DeleteSubscriptionRequest)(nil), "pb.DeleteSubscriptionRequest")
	proto.RegisterType((*RegisterBrokerRequest)(nil), "pb.RegisterBrokerRequest")
	proto.RegisterType((*BrokerHBRequest)(nil), "pb.BrokerHBRequest")
	proto.RegisterType((*BrokerHBResponse)(nil), "pb.BrokerHBResponse")
	proto.RegisterType((*UpdateRouteRequest)(nil), "pb.UpdateRouteRequest")
	proto.RegisterType((*UpdateRouteResponse)(nil), "pb.UpdateRouteResponse")
	proto.RegisterType((*Lease)(nil), "pb.Lease")
	proto.RegisterType((*Response)(nil), "pb.Response")
}

func init() { proto.RegisterFile("baton.proto", fileDescriptor_8087ccb7ab16ead4) }

var fileDescriptor_8087ccb7ab16ead4 = []byte{
	// 680 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xdd, 0x6e, 0xd3, 0x58,
	0x10, 0xae, 0x7f, 0x92, 0x26, 0xe3, 0x6e, 0xd6, 0x3b, 0xed, 0xb6, 0x69, 0xb4, 0x5b, 0x05, 0x5f,
	0x45, 0x01, 0x8a, 0x94, 0xde, 0x80, 0x04, 0x48, 0x71, 0x62, 0xa8, 0xa5, 0x92, 0x46, 0xc7, 0x89,
	0x00, 0x09, 0xa9, 0xb2, 0xe3, 0xa3, 0xca, 0xa2, 0x89, 0xdd, 0x63, 0x5b, 0xe2, 0x05, 0xb8, 0xe0,
	0x6d, 0x78, 0x44, 0x74, 0x7c, 0x9c, 0xc4, 0x76, 0x0a, 0xea, 0xdd, 0x99, 0x6f, 0x66, 0xbe, 0xf9,
	0xb1, 0xbf, 0x01, 0xcd, 0x73, 0x93, 0x70, 0x75, 0x1e, 0xb1, 0x30, 0x09, 0x51, 0x8e, 0x3c, 0x63,
	0x05, 0x38, 0x62, 0xd4, 0x4d, 0xe8, 0x2c, 0x8c, 0x82, 0x05, 0xa1, 0xf7, 0x29, 0x8d, 0x13, 0x44,
	0x50, 0x57, 0xee, 0x92, 0xb6, 0xa5, 0xae, 0xd4, 0x6b, 0x92, 0xec, 0x8d, 0x06, 0x1c, 0xdc, 0xa7,
	0x34, 0xa5, 0x93, 0x74, 0xe9, 0x51, 0x16, 0xb7, 0xe5, 0xae, 0xd4, 0xab, 0x91, 0x12, 0x86, 0x5d,
	0xd0, 0xdc, 0x34, 0x09, 0x9d, 0x85, 0x7b, 0x17, 0xac, 0x6e, 0xdb, 0x4a, 0x57, 0xea, 0x35, 0x48,
	0x11, 0x32, 0x06, 0x80, 0x63, 0x7a, 0x47, 0x2b, 0xf5, 0xfe, 0x83, 0x66, 0xc2, 0xed, 0xc9, 0xb6,
	0xe8, 0x16, 0x30, 0x42, 0x38, 0x15, 0x3d, 0x3a, 0xa9, 0x17, 0x2f, 0x58, 0x10, 0x25, 0x41, 0xb8,
	0xfa, 0x53, 0xab, 0x25, 0x3a, 0xb9, 0x42, 0xf7, 0x88, 0x26, 0x5f, 0xc0, 0xa9, 0x68, 0xf2, 0x91,
	0x05, 0x8d, 0xa7, 0xf0, 0x2f, 0xa1, 0xb7, 0x41, 0x9c, 0x50, 0x66, 0xb2, 0xf0, 0x2b, 0x65, 0x85,
	0x60, 0xd7, 0xf7, 0xd9, 0x3a, 0x98, 0xbf, 0x8d, 0xe7, 0xf0, 0xb7, 0x08, 0xba, 0x34, 0xd7, 0x61,
	0x1d, 0x68, 0x78, 0x19, 0x64, 0xfb, 0x59, 0x3f, 0x2a, 0xd9, 0xd8, 0x46, 0x1f, 0xf4, 0x6d, 0x78,
	0x1c, 0x85, 0xab, 0x98, 0xe2, 0x31, 0xd4, 0xb3, 0xbd, 0xc7, 0x6d, 0xa9, 0xab, 0xf4, 0x54, 0x92,
	0x5b, 0xc6, 0x17, 0xc0, 0x79, 0xe4, 0xbb, 0x09, 0x25, 0x61, 0x9a, 0xd0, 0x35, 0x7b, 0x0b, 0xe4,
	0xc0, 0xcf, 0x5a, 0x50, 0x89, 0x1c, 0xf8, 0x9b, 0x09, 0xe4, 0xd2, 0xd7, 0xad, 0xbb, 0x0b, 0x3e,
	0x66, 0x56, 0xbf, 0x35, 0x80, 0xf3, 0xc8, 0x3b, 0x1f, 0x66, 0x08, 0xc9, 0x3d, 0xc6, 0x25, 0x1c,
	0x96, 0xd8, 0xf3, 0x66, 0xaa, 0xf4, 0x4f, 0xa0, 0x7e, 0x47, 0xdd, 0x98, 0xf2, 0x5f, 0x44, 0xe9,
	0x69, 0x83, 0x26, 0xa7, 0xba, 0xe2, 0x08, 0xc9, 0x1d, 0xc6, 0x0f, 0x09, 0x6a, 0x19, 0x52, 0x9a,
	0x5c, 0x2a, 0x4f, 0x8e, 0x67, 0x00, 0xe2, 0x3d, 0xe4, 0x2b, 0x14, 0xdd, 0x16, 0x10, 0xfe, 0x21,
	0xe9, 0xb7, 0x28, 0x60, 0xd4, 0x9f, 0x05, 0x4b, 0x9a, 0x2f, 0xae, 0x08, 0xa1, 0x01, 0x6a, 0x44,
	0xd9, 0xb2, 0xad, 0x66, 0x33, 0xb5, 0x78, 0x23, 0x53, 0xca, 0x96, 0x41, 0x1c, 0xf3, 0xb9, 0x32,
	0x9f, 0xf1, 0x12, 0x1a, 0x9b, 0x51, 0x9e, 0xc1, 0x01, 0xcb, 0xdf, 0xa3, 0xd0, 0x17, 0xdf, 0xb8,
	0x35, 0x68, 0xf0, 0x3c, 0x6e, 0x93, 0x92, 0xb7, 0xdf, 0x81, 0xba, 0xd8, 0x10, 0xee, 0x83, 0x32,
	0x9d, 0x9b, 0xfa, 0x1e, 0x7f, 0x38, 0x73, 0x53, 0x97, 0xfa, 0x6f, 0x00, 0xb6, 0x95, 0xb0, 0x01,
	0x2a, 0xb1, 0x86, 0x63, 0x7d, 0x0f, 0x9b, 0x50, 0xfb, 0x48, 0xec, 0x99, 0xa5, 0x4b, 0xd8, 0x02,
	0xe0, 0xe0, 0x8d, 0xb0, 0x65, 0x04, 0xa8, 0x8f, 0xad, 0x89, 0x6d, 0x8d, 0x75, 0xa5, 0xff, 0x5d,
	0x02, 0x95, 0xd7, 0x40, 0x0d, 0xf6, 0x9d, 0xf9, 0x68, 0x64, 0x39, 0x8e, 0xbe, 0xc7, 0x23, 0xde,
	0x0d, 0xed, 0x2b, 0x6b, 0xac, 0x4b, 0xf8, 0x0f, 0xfc, 0x35, 0xbb, 0x9e, 0xda, 0xa3, 0x9b, 0x0f,
	0xb6, 0xe3, 0xd8, 0x93, 0xf7, 0xba, 0x8c, 0x6d, 0x38, 0x72, 0xe6, 0xa6, 0x33, 0x22, 0xf6, 0x74,
	0x66, 0x5f, 0x4f, 0x36, 0x1e, 0x05, 0x4f, 0xe0, 0x50, 0x04, 0x0f, 0xaf, 0x78, 0xc9, 0xcf, 0x37,
	0xd6, 0x27, 0xdb, 0x99, 0xe9, 0x2a, 0x9e, 0x41, 0xa7, 0x94, 0x52, 0xf6, 0xd7, 0x06, 0x3f, 0x15,
	0xa8, 0x99, 0xfc, 0x64, 0xe0, 0x05, 0x68, 0x85, 0x43, 0x81, 0xc7, 0xd9, 0x4e, 0x76, 0x2e, 0x47,
	0xe7, 0x80, 0xe3, 0x9b, 0x7d, 0x5e, 0x80, 0x56, 0x50, 0xbb, 0x48, 0xda, 0x95, 0x7f, 0x25, 0x69,
	0xb8, 0x3e, 0x49, 0x45, 0xf5, 0xe1, 0xff, 0xdb, 0x82, 0x0f, 0xa8, 0x72, 0x97, 0x62, 0x57, 0xc0,
	0x82, 0xe2, 0xb7, 0xc2, 0xae, 0x50, 0xbc, 0xde, 0xa8, 0x94, 0xba, 0x2c, 0x31, 0xa9, 0x9b, 0xe0,
	0x21, 0x0f, 0xa8, 0x48, 0xb7, 0x73, 0x54, 0x06, 0xf3, 0xec, 0x57, 0xd0, 0x2a, 0x1f, 0x04, 0x3c,
	0x15, 0xec, 0x0f, 0x1c, 0x89, 0x4a, 0xe1, 0xb7, 0xa0, 0x15, 0x54, 0x26, 0x76, 0xb6, 0x2b, 0xea,
	0xce, 0xc9, 0x0e, 0x2e, 0xf2, 0xbd, 0x7a, 0x76, 0xdc, 0x2f, 0x7e, 0x05, 0x00, 0x00, 0xff, 0xff,
	0xff, 0x8a, 0x4d, 0xc5, 0xeb, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BatonClient is the client API for Baton service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BatonClient interface {
	CreateTopic(ctx context.Context, in *CreateTopicRequest, opts ...grpc.CallOption) (*Response, error)
	DeleteTopic(ctx context.Context, in *DeleteTopicRequest, opts ...grpc.CallOption) (*Response, error)
	CreateSubscription(ctx context.Context, in *CreateSubscriptionRequest, opts ...grpc.CallOption) (*Response, error)
	DeleteSubscription(ctx context.Context, in *DeleteSubscriptionRequest, opts ...grpc.CallOption) (*Response, error)
	BrokerHeartBeat(ctx context.Context, in *BrokerHBRequest, opts ...grpc.CallOption) (*BrokerHBResponse, error)
	RegisterBroker(ctx context.Context, in *RegisterBrokerRequest, opts ...grpc.CallOption) (*Response, error)
	UpdateRoute(ctx context.Context, in *UpdateRouteRequest, opts ...grpc.CallOption) (*UpdateRouteResponse, error)
}

type batonClient struct {
	cc *grpc.ClientConn
}

func NewBatonClient(cc *grpc.ClientConn) BatonClient {
	return &batonClient{cc}
}

func (c *batonClient) CreateTopic(ctx context.Context, in *CreateTopicRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.Baton/CreateTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *batonClient) DeleteTopic(ctx context.Context, in *DeleteTopicRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.Baton/DeleteTopic", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *batonClient) CreateSubscription(ctx context.Context, in *CreateSubscriptionRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.Baton/CreateSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *batonClient) DeleteSubscription(ctx context.Context, in *DeleteSubscriptionRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.Baton/DeleteSubscription", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *batonClient) BrokerHeartBeat(ctx context.Context, in *BrokerHBRequest, opts ...grpc.CallOption) (*BrokerHBResponse, error) {
	out := new(BrokerHBResponse)
	err := c.cc.Invoke(ctx, "/pb.Baton/BrokerHeartBeat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *batonClient) RegisterBroker(ctx context.Context, in *RegisterBrokerRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.Baton/RegisterBroker", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *batonClient) UpdateRoute(ctx context.Context, in *UpdateRouteRequest, opts ...grpc.CallOption) (*UpdateRouteResponse, error) {
	out := new(UpdateRouteResponse)
	err := c.cc.Invoke(ctx, "/pb.Baton/UpdateRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BatonServer is the server API for Baton service.
type BatonServer interface {
	CreateTopic(context.Context, *CreateTopicRequest) (*Response, error)
	DeleteTopic(context.Context, *DeleteTopicRequest) (*Response, error)
	CreateSubscription(context.Context, *CreateSubscriptionRequest) (*Response, error)
	DeleteSubscription(context.Context, *DeleteSubscriptionRequest) (*Response, error)
	BrokerHeartBeat(context.Context, *BrokerHBRequest) (*BrokerHBResponse, error)
	RegisterBroker(context.Context, *RegisterBrokerRequest) (*Response, error)
	UpdateRoute(context.Context, *UpdateRouteRequest) (*UpdateRouteResponse, error)
}

func RegisterBatonServer(s *grpc.Server, srv BatonServer) {
	s.RegisterService(&_Baton_serviceDesc, srv)
}

func _Baton_CreateTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTopicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BatonServer).CreateTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Baton/CreateTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BatonServer).CreateTopic(ctx, req.(*CreateTopicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Baton_DeleteTopic_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTopicRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BatonServer).DeleteTopic(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Baton/DeleteTopic",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BatonServer).DeleteTopic(ctx, req.(*DeleteTopicRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Baton_CreateSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSubscriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BatonServer).CreateSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Baton/CreateSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BatonServer).CreateSubscription(ctx, req.(*CreateSubscriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Baton_DeleteSubscription_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSubscriptionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BatonServer).DeleteSubscription(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Baton/DeleteSubscription",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BatonServer).DeleteSubscription(ctx, req.(*DeleteSubscriptionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Baton_BrokerHeartBeat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BrokerHBRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BatonServer).BrokerHeartBeat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Baton/BrokerHeartBeat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BatonServer).BrokerHeartBeat(ctx, req.(*BrokerHBRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Baton_RegisterBroker_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterBrokerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BatonServer).RegisterBroker(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Baton/RegisterBroker",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BatonServer).RegisterBroker(ctx, req.(*RegisterBrokerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Baton_UpdateRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRouteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BatonServer).UpdateRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Baton/UpdateRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BatonServer).UpdateRoute(ctx, req.(*UpdateRouteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Baton_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Baton",
	HandlerType: (*BatonServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateTopic",
			Handler:    _Baton_CreateTopic_Handler,
		},
		{
			MethodName: "DeleteTopic",
			Handler:    _Baton_DeleteTopic_Handler,
		},
		{
			MethodName: "CreateSubscription",
			Handler:    _Baton_CreateSubscription_Handler,
		},
		{
			MethodName: "DeleteSubscription",
			Handler:    _Baton_DeleteSubscription_Handler,
		},
		{
			MethodName: "BrokerHeartBeat",
			Handler:    _Baton_BrokerHeartBeat_Handler,
		},
		{
			MethodName: "RegisterBroker",
			Handler:    _Baton_RegisterBroker_Handler,
		},
		{
			MethodName: "UpdateRoute",
			Handler:    _Baton_UpdateRoute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "baton.proto",
}
