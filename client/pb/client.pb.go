// Code generated by protoc-gen-go. DO NOT EDIT.
// source: client.proto

package clientpb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PublishResult int32

const (
	PublishResult_SUCCESS PublishResult = 0
	PublishResult_FAILED  PublishResult = 1
)

var PublishResult_name = map[int32]string{
	0: "SUCCESS",
	1: "FAILED",
}

var PublishResult_value = map[string]int32{
	"SUCCESS": 0,
	"FAILED":  1,
}

func (x PublishResult) String() string {
	return proto.EnumName(PublishResult_name, int32(x))
}

func (PublishResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{0}
}

type ConsumeResult int32

const (
	ConsumeResult_OK    ConsumeResult = 0
	ConsumeResult_RETRY ConsumeResult = 1
)

var ConsumeResult_name = map[int32]string{
	0: "OK",
	1: "RETRY",
}

var ConsumeResult_value = map[string]int32{
	"OK":    0,
	"RETRY": 1,
}

func (x ConsumeResult) String() string {
	return proto.EnumName(ConsumeResult_name, int32(x))
}

func (ConsumeResult) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_014de31d7ac8c57c, []int{1}
}

func init() {
	proto.RegisterEnum("clientpb.PublishResult", PublishResult_name, PublishResult_value)
	proto.RegisterEnum("clientpb.ConsumeResult", ConsumeResult_name, ConsumeResult_value)
}

func init() { proto.RegisterFile("client.proto", fileDescriptor_014de31d7ac8c57c) }

var fileDescriptor_014de31d7ac8c57c = []byte{
	// 122 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xc9, 0x4c,
	0xcd, 0x2b, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x80, 0xf0, 0x0a, 0x92, 0xb4, 0x34,
	0xb8, 0x78, 0x03, 0x4a, 0x93, 0x72, 0x32, 0x8b, 0x33, 0x82, 0x52, 0x8b, 0x4b, 0x73, 0x4a, 0x84,
	0xb8, 0xb9, 0xd8, 0x83, 0x43, 0x9d, 0x9d, 0x5d, 0x83, 0x83, 0x05, 0x18, 0x84, 0xb8, 0xb8, 0xd8,
	0xdc, 0x1c, 0x3d, 0x7d, 0x5c, 0x5d, 0x04, 0x18, 0xb5, 0x94, 0xb8, 0x78, 0x9d, 0xf3, 0xf3, 0x8a,
	0x4b, 0x73, 0x53, 0xa1, 0x2a, 0xd9, 0xb8, 0x98, 0xfc, 0xbd, 0x05, 0x18, 0x84, 0x38, 0xb9, 0x58,
	0x83, 0x5c, 0x43, 0x82, 0x22, 0x05, 0x18, 0x93, 0xd8, 0xc0, 0xc6, 0x1b, 0x03, 0x02, 0x00, 0x00,
	0xff, 0xff, 0x04, 0x41, 0x63, 0x34, 0x6e, 0x00, 0x00, 0x00,
}
